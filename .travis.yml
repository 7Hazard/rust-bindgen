language: rust

matrix:
  allow_failures:
    - rust: nightly
  include:
    - rust: stable
      env: LLVM_VERSION=3.5.2
      script: cargo build --features static --verbose
    - rust: nightly
      env: LLVM_VERSION=3.5.2
      script: cargo build --features clippy --verbose
    - rust: stable
      env: LLVM_VERSION=3.5.2
    - rust: nightly
      env: LLVM_VERSION=3.5.2
    - rust: stable
      env: LLVM_VERSION=3.8.0
    - rust: nightly
      env: LLVM_VERSION=3.8.0
    - os: osx
      rust: stable
      env: LLVM_VERSION=devtools
    - os: osx
      rust: stable
      env: LLVM_VERSION=3.5
    - os: osx
      rust: nightly
      env: LLVM_VERSION=3.5
    - os: osx
      rust: stable
      env: LLVM_VERSION=3.8
    - os: osx
      rust: nightly
      env: LLVM_VERSION=3.8

notifications:
  webhooks: http://build.servo.org:54856/travis

cache: cargo

before_install:
  -
    set -e;
    if [ "${TRAVIS_OS_NAME}" == "osx" ]; then
      if [ "${LLVM_VERSION}" == "devtools" ]; then
        export LIBCLANG_PATH=/Library/Developer/CommandLineTools/usr/lib;
      else
        brew update >/dev/null;
        brew install llvm3${LLVM_VERSION#3.};
        export LIBCLANG_PATH=`brew --prefix llvm3${LLVM_VERSION#3.}`/lib/llvm-${LLVM_VERSION}/lib;
      fi
    else
      export LLVM=clang+llvm-${LLVM_VERSION}-x86_64-linux-gnu-ubuntu-14.04;
      wget http://llvm.org/releases/${LLVM_VERSION}/${LLVM}.tar.xz ;
      mkdir llvm;
      tar -xf ${LLVM}.tar.xz -C llvm --strip-components=1;
      export LIBCLANG_PATH=`pwd`/llvm/lib;
    fi
  -
    echo $LIBCLANG_PATH;

after_success: |
  [ "${TRAVIS_RUST_VERSION}" = "stable" ] &&
  [ "${TRAVIS_OS_NAME}" = "linux" ] &&
  [ "${LLVM_VERSION}" = "3.8" ] &&
  ./scripts/travis-doc-upload.sh
